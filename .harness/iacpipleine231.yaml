pipeline:
  name: iacpipleine-231
  identifier: iacpipleine231
  projectIdentifier: ORCA_onedev
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: build
        identifier: build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: awx
                  identifier: awx
                  spec:
                    shell: Bash
                    command: |-
                      #!/bin/bash
                      set -e 
                      sudo apt-get update
                      apt-get update && apt-get install curl
                      apt-get install jq
                      # Variables
                      AWX_HOST="http://34.45.224.205:32556"    # Replace with your AWX server's URL or IP
                      API_TOKEN="XNnAeBgeAyBAVREWg59EqXo5LCcylZ"  # Replace with your API token
                      TEMPLATE_ID=14                         # Replace with your job template ID
                      EXTRA_VARS='{"var1": "value1", "var2": "value2"}'  # Replace with your job's extra variables

                      # Trigger Job Template
                      response=$(curl -s -X POST "$AWX_HOST/api/v2/job_templates/$TEMPLATE_ID/launch/" \
                        -H "Authorization: Bearer $API_TOKEN" \
                        -H "Content-Type: application/json" \
                        -d "$EXTRA_VARS")

                      # Extract Job ID
                      job_id=$(echo $response | jq -r '.id')

                      if [ "$job_id" != "null" ]; then
                        echo "Job triggered successfully! Job ID: $job_id"
                        
                        # Monitor Job Status
                        while true; do
                          job_status=$(curl -s -X GET "$AWX_HOST/api/v2/jobs/$job_id/" \
                            -H "Authorization: Bearer $API_TOKEN" \
                            | jq -r '.status')

                          echo "Job Status: $job_status"
                          if [[ "$job_status" == "successful" ]]; then
                            echo "Job completed successfully!"
                            break
                          elif [[ "$job_status" == "failed" ]]; then
                            echo "Job failed. Check logs in AWX."
                            break
                          fi

                          sleep 5  # Wait before checking again
                        done
                      else
                        echo "Failed to trigger job. Response: $response"
                      fi
    - stage:
        name: vm create
        identifier: vm_create
        description: ""
        type: IACM
        spec:
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          workspace: workspace231
          execution:
            steps:
              - step:
                  type: IACMTerraformPlugin
                  name: init
                  identifier: init
                  timeout: 10m
                  spec:
                    command: init
              - step:
                  type: IACMTerraformPlugin
                  name: plan
                  identifier: plan
                  timeout: 10m
                  spec:
                    command: plan
              - step:
                  type: IACMTerraformPlugin
                  name: apply
                  identifier: apply
                  timeout: 10m
                  spec:
                    command: apply
        tags: {}
  properties:
    ci:
      codebase:
        repoName: harnessrepo
        build: <+input>
